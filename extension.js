// Generated by CoffeeScript 1.7.1
var ConfigManager, Extension, ExtensionUtils, WindowManager, Wnck, disable, enable, helper, init, keybindings;

ExtensionUtils = imports.misc.extensionUtils;

Extension = ExtensionUtils.getCurrentExtension();

helper = Extension.imports.helper;

keybindings = Extension.imports.lib.keybindings;

ConfigManager = Extension.imports.config.configManager.ConfigManager;

WindowManager = Extension.imports.lib.windowManager.WindowManager;

Wnck = imports.gi.Wnck;

init = function() {
  var callback, config, e, keybinding, onWindowChange, wm, _ref;
  global.twm = {
    functions: {}
  };
  try {
    config = new ConfigManager;
    _ref = config.keybindings;
    for (keybinding in _ref) {
      callback = _ref[keybinding];
      keybindings.add(keybinding, callback);
    }
    keybindings.apply();
    wm = new WindowManager;
    onWindowChange = function(wnckScreen, wnckWindow) {
      var currentLayout, currentWorkspace;
      currentWorkspace = wm.getActiveWorkspace();
      if (wnckWindow.is_visible_on_workspace(currentWorkspace)) {
        if (config.windowsFilter(wnckWindow)) {
          currentLayout = config.layouts.current();
          if ((currentLayout != null) && currentLayout !== 'float') {
            config.layouts.apply(currentLayout, config.windowsFilter);
          }
        }
      }
      return false;
    };
    wm.connect("window-opened", onWindowChange);
    wm.connect("window-closed", onWindowChange);
    if (typeof config.onStartup === "function") {
      config.onStartup();
    }
  } catch (_error) {
    e = _error;
    global.log(e);
    helper.log(e);
  }
  return false;
};

enable = function() {
  return false;
};

disable = function() {
  return false;
};
